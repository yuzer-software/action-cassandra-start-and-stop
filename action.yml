name: 'action-cassandra-start-and-stop'
description: 'Start/stop cassandra server for build test'
inputs:
  cassandra_version:
    description: 'Cassandra server version'
    required: false
    default: '4.1.3'
  cassandra_container_name:
    description: 'container name'
    default: 'cassandra-container'
  stop:
    description: 'Stop Cassandra server'
    required: false
outputs:
  cassandra_port:
    description: "Random host port on which Cassandra is bound."
    value: ${{ steps.get-port.outputs.cassandra_host_port }}
runs:
  using: 'composite'
  steps:
    - name: Set container name
      id: prep
      run: |
        CASSANDRA_CONTAINER_NAME="${{ inputs.cassandra_container_name }}-${{ github.event.repository.name }}"
        echo "Container name is $CASSANDRA_CONTAINER_NAME"
        echo "dcass_container_name=${CASSANDRA_CONTAINER_NAME}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Start Cassandra container
      if: '!inputs.stop'
      run: |
        if [ "$(docker ps -aq -f name=${{ steps.prep.outputs.dcass_container_name }})" ]; then
            docker rm -f ${{ steps.prep.outputs.dcass_container_name }}
        fi
        mkdir -p ${RUNNER_TEMP}/cassandra_datadir
        docker run -d --name ${{ steps.prep.outputs.dcass_container_name }} \
          -v ${RUNNER_TEMP}/cassandra_datadir:/var/lib/cassandra \
          -p 9042 \
          cassandra:${{ inputs.cassandra_version }}
      shell: bash

    - name: Get cassandra host port number
      id: get-port
      if: '!inputs.stop'
      run : |
        CASSANDRA_HOST_PORT=$(docker inspect ${{ steps.prep.outputs.dcass_container_name }} --format '{{ (index (index .NetworkSettings.Ports "9042/tcp") 0).HostPort }}')
        echo "cassandra_host_port=${CASSANDRA_HOST_PORT}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Wait for Cassandra to start
      if: '!inputs.stop'
      run: |
        timeout_seconds=120 
        start_time=$(date +%s) 

        check_cassandra() {
              if command -v cqlsh >/dev/null 2>&1; then
                  cqlsh localhost ${{ steps.get-port.outputs.cassandra_host_port }} -e "DESCRIBE KEYSPACES;"
              else
                  docker exec ${{ steps.prep.outputs.dcass_container_name }} cqlsh -e "DESCRIBE KEYSPACES;"
              fi
        }

        while ! check_cassandra; do
            current_time=$(date +%s)
            elapsed_time=$((current_time - start_time))

            if [ "$elapsed_time" -ge "$timeout_seconds" ]; then
                echo "Timeout: Cassandra is not ready within the specified timeout."
                docker rm -f ${{ steps.prep.outputs.dcass_container_name }}
                exit 1
            fi

            sleep 2
        done
        echo "Cassandra is ready."
      shell: bash

    - name: Delete cassandra container
      if: 'inputs.stop'
      run: |
        if [ "$(docker ps -aq -f name=${{ steps.prep.outputs.dcass_container_name }})" ]; then
            docker rm -f ${{ steps.prep.outputs.dcass_container_name }}
        fi
      shell: bash